Reference : 

https://www.mongodb.com/docs/manual/tutorial/insert-documents/


# crud - create / read / update / delete


# ------
# create
# ------

# insert one record

$ db.inventory.insertOne(
   { item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } }
  )

$ db.beers.insertOne(
    {_id: 4, name: "Cold Mountain", type: "Ale", state: "NC", abv: 5.9}
  );


# insert many records

$ db.inventory.insertMany([
   { item: "journal", qty: 25, tags: ["blank", "red"], size: { h: 14, w: 21, uom: "cm" } },
   { item: "mat", qty: 85, tags: ["gray"], size: { h: 27.9, w: 35.5, uom: "cm" } },
   { item: "mousepad", qty: 25, tags: ["gel", "blue"], size: { h: 19, w: 22.85, uom: "cm" } }
  ])



# ------
# Update 
# ------

# Update one document

$ db.beers.updateOne({name:'Common Ties'}, { $set: {state:'NC'} })



# Update many documents

$ db.beers.updateMany({type:'IPA'}, {$set:{toDelete:true}})


# Update many when value is null

$ db.beers.updateMany({toDelete:null}, {$set:{toDelete:false}})


# embed document within document
db.beers.updateMany({}, {$set:{character:{color:'Yellow',taste:'bitter',ingredient:['malt','hop']}}})

# embed with filter
db.beers.updateMany({type:'Ale'}, {$set:{character:{color:'light brown',taste:'sweet',ingredient:['malt','chocalate']}}})


# update embedded doc attributes based on condition

db.beers.updateMany( {'character.ingredient':'barley'}, {$set:{'character.taste':'bitter'}} )




# ------
# Read
# ------

# cursor to all documents  

$ db.inventory.find()


# Find one document within a collections. This returns document not cursor like find(). 

$ db.<collection_name>.findOne()



# to filter

$ db.inventory.find({item:"mousepad"})


# use gt operator

$ db.beers.find({abv:{$gt:7}})



# to get docs as array 

$ db.beers.find().toArray()



# iterate the cursor 

$ db.beers.find().forEach( (data) => {printjson(data)} )



# find by matching the value in array - 

$ db.beers.find({state:'PA'})



# to find by matching elements in embedded docs - 

$ db.beers.find(  {'character.color' : 'orange' } )








# ------
# Delete 
# ------

# delete one record

$ db.beers.deleteOne({toDelete:true})


# delete many records

$ db.beers.deleteMany({toDelete:true})

